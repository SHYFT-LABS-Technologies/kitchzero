generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String    @id @default(cuid())
  username             String    @unique
  passwordHash         String
  mustChangePassword   Boolean   @default(true)
  role                 UserRole
  tenantId             String?
  branchId             String?
  isActive             Boolean   @default(true)
  lastLoginAt          DateTime?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt

  tenant               Tenant?   @relation(fields: [tenantId], references: [id])
  branch               Branch?   @relation(fields: [branchId], references: [id])
  refreshTokens        RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}

model Tenant {
  id        String   @id @default(cuid())
  name      String   @unique
  slug      String   @unique
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users     User[]
  branches  Branch[]

  @@map("tenants")
}

model Branch {
  id        String   @id @default(cuid())
  name      String
  slug      String
  tenantId  String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tenant    Tenant   @relation(fields: [tenantId], references: [id])
  users     User[]

  @@unique([tenantId, slug])
  @@map("branches")
}

enum UserRole {
  KITCHZERO_ADMIN
  RESTAURANT_ADMIN
  BRANCH_ADMIN
}